---
title: "Circle Plot: sleep deprivation"
format: pdf
lang: en-GB
fontfamily: "Arial" 
editor: 
  markdown:
      wrap: 62
---

```{r ..}

# Final plot here

```

{{< pagebreak >}}


Here I will further investigate the use of circle plot by focusing on a different aspect.<!--- WHICH ASPECT?-->

First, I combine the data probe and the sleep. The data used for this exploration has been downloaded from OSF (https://osf.io/xq6wr/).

```{r packages}
library(tidyverse)
# loader script
list.files("../data", pattern=".rdata", full.names = T,ignore.case = T) -> files
for(x in files){load(x)}

```

Before we start, some minor changes to the data frame will be done to make the plots look better and make them easier to work with. 

<!--- CHECK IF IT IS NECESSARY WITH BEHAVIOUR PERFORMANCE! -->

```{r start}
# Join diary & data
left_join(sleep_diary |> 
            mutate(subj=as.numeric(subj), 
                   sleepdep = ifelse(pre_control==1, "NS",
                                     ifelse(pre_sleepdep==1, "PSD", NA))),
              #' Add common var
          data.probe, # behaviour data
          by=c("subj", "sleepdep")) -> sleep_and_data

# data filtering & changes
sleep_and_data |>
  filter(!(is.na(sleepdep))) |>
  mutate(sleepdep=factor(sleepdep, levels=c("PSD","NS"))
         ) -> slp
```

According to the draft idea, I believe it is best to plot the data according to sleep time and sleep duration. More specifically, the x-variable containing the time that participants fell asleep, and the y-variable relating to the amount of sleep participant received. This will be split into their respective conditions and in this way, we should see that participants go to sleep later, and sleep less. 

```{r simple point over all associations}
slp |>
  ggplot(aes(x=sleep_time, y=sleep_duration, col=sleepdep))+
  geom_point()
  
```

As expected, participants did go to sleep later during the PSD (SD) condition and slept fewer hours as compared to the NS (control). However, a problem with this plot is that it visualizes all the (three) data points pertaining to participants sleep in each condition. To more effectively visualize with a circle plot, I should use a summary statistic of each the sleep. 

<!--- Illustrate data plot with labels attached to each data point? -->
<!--- Illustrate data plot with labels attached to each data point? -->
<!--- Illustrate data plot with labels attached to each data point? -->

To illustrate my point, we can visualize sleep duration over each subject, split by condition. 

```{r summary over subj & sleepdep}
slp |>
  ggplot(aes(x=subj, y=sleep_duration, col=sleepdep))+
  geom_point(position=position_dodge(.8))+
  stat_summary()

```

This plot produce a summary statistic (mean_se) over each subject for each condition. The result is more of what I am looking for. However, this plot is missing the relation to sleep time, which has to be represented by one of the axis. There is a problem related to this, however, in that each sleep duration point has a related sleep time point. This means that there is an association between all the data points for our plot, and grouping/summarizing within the ggplot is hard (if not impossible). One work around is to transform the data before we plug it into ggplot. 

```{r start}
slp |>
  group_by(subj) |>
  summarize(
    # Mean sleep duration over participant by condition 
    NS_duration = mean(sleep_duration[sleepdep=="NS"], na.rm=T),
    PSD_duration = mean(sleep_duration[sleepdep=="PSD"], na.rm=T),
    # mean sleep time over participant by condition
    NS_sleep = mean(sleep_time_cum[sleepdep=="NS"], na.rm=T),
    NS_sleep = ifelse(NS_sleep>=24, NS_sleep-24, NS_sleep),
      #' Fix to standard clock time
   # NS_sleep_sd = sd(sleep_time_cum[sleepdep=="NS"], na.rm=T),
    PSD_sleep = mean(sleep_time_cum[sleepdep=="PSD"], na.rm=T),
    PSD_sleep = ifelse(PSD_sleep>=24, PSD_sleep-24, PSD_sleep),
   # PSD_sleep_sd = sd(sleep_time_cum[sleepdep=="PSD"], na.rm=T),
    # mean wake time over participant by condition
    NS_wake = mean(last_awaking_fix[sleepdep=="NS"], na.rm=T),
    PSD_wake = mean(last_awaking_fix[sleepdep=="PSD"], na.rm=T),
    ) |> 
  pivot_longer(c(starts_with("NS"), starts_with("PSD")), 
               names_pattern = "(.*)_(.*)",
               names_to=c("sleepdep", ".value")) |>
  mutate(sleepdep = factor(sleepdep, levels=c("PSD","NS"))) |>
  ggplot(aes(x=sleep, y=duration, fill=sleepdep, col=sleepdep))+
  #geom_col() # For some reason this produce weird results
  stat_summary(geom="col")+
  geom_point(size=3)
###
```




