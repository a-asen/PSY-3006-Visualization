---
title: "Circle Plot: sleep deprivation"
format: pdf
lang: en-GB
fontfamily: "Arial" 
editor: 
  markdown:
      wrap: 62
---

```{r ..}

# Final plot here

```

{{< pagebreak >}}


Here I will further investigate the use of circle plot by focusing on a different aspect.<!--- WHICH ASPECT?-->

First, I combine the data probe and the sleep. The data used for this exploration has been downloaded from OSF (https://osf.io/xq6wr/).

```{r packages}
library(tidyverse)
# loader script
list.files("../data", pattern=".rdata", full.names = T,ignore.case = T) -> files
for(x in files){load(x)}

```

```{r start}
# Join diary & data
left_join(sleep_diary |> 
            mutate(subj=as.numeric(subj), 
                   sleepdep = ifelse(pre_control==1, "control",
                              ifelse(pre_sleepdep==1, "SD", NA))),
              #' Add common var
          data.probe,
          by=c("subj", "sleepdep")) -> sleep_and_data
```


```{r start}
sleep_and_data |> 
  filter(!(is.na(sleepdep))) |>
  group_by(subj) |>
  summarize(
    # Mean sleep duration over participant by condition 
    NS_duration = mean(sleep_duration[sleepdep=="control"], na.rm=T),
    PSD_duration = mean(sleep_duration[sleepdep=="SD"], na.rm=T),
    # mean sleep time over participant by condition
    NS_sleep = mean(sleep_time_cum[sleepdep=="control"], na.rm=T),
    NS_sleep = ifelse(NS_sleep>=24, NS_sleep-24, NS_sleep),
      #' Fix to standard clock time
   # NS_sleep_sd = sd(sleep_time_cum[sleepdep=="control"], na.rm=T),
    PSD_sleep = mean(sleep_time_cum[sleepdep=="SD"], na.rm=T),
    PSD_sleep = ifelse(PSD_sleep>=24, PSD_sleep-24, PSD_sleep),
   # PSD_sleep_sd = sd(sleep_time_cum[sleepdep=="SD"], na.rm=T),
    # mean wake time over participant by condition
    NS_wake = mean(last_awaking_fix[sleepdep=="control"], na.rm=T),
    PSD_wake = mean(last_awaking_fix[sleepdep=="SD"], na.rm=T),
    ) |>
  pivot_longer(c(starts_with("NS"), starts_with("PSD")), 
               names_pattern = "(.*)_(.*)",
               names_to=c("sleepdep", ".value")) |>
  mutate(sleepdep = factor(sleepdep, levels=c("PSD","NS"))) |>
  ggplot(aes(x=sleep, y=duration, fill=sleepdep, col=sleepdep))+
  geom_col(width = .015)+
  geom_point(size=3)
###
```


This figure plots all the individual data points. This means that each participants has three data points shown on the figure. This, however, is difficult to discern without applying names to each of the data points.  However, I would like a summary of all the
```{r start}
sleep_and_data |>
  filter(!(is.na(sleepdep))) |>
  ggplot(aes(x=sleep_time, y=sleep_duration, col=sleepdep))+
  stat_summary(geom="col", )+
  stat_summary(geom="pointrange")
  geom_col()
  
```


```{r start}
sleep_and_data |>
  filter(!(is.na(sleepdep))) |>
  ggplot(aes(x=sleep_time, y=sleep_duration, col=sleepdep, group=subj))+
  geom_point()+
  stat_summary(geom="col", fun = \(data){
    print(data)
    data$x -> x
    data$y -> y
    data$col -> col
  })
  stat_summary(geom="pointrange")
  geom_col()


```








