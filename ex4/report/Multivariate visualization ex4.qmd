---
title: "Mutlivariate visualization: continous and continous variable"
format: pdf
lang: en-GB
editor: 
  markdown:
      wrap: 62
---

```{r start libs}

```


```{r start plot}

```


{{< pagebreak >}}


For this exercise, I will visualize distributions over a categorical variable. More specifically, I would like to visualize the distribution of AE over different cognitive states (such as mind wandering and mind blanking). As noted in the previous report, visualizing over categories can be more informative if we expect that one state should result in a different outcome. In our case, we might expect that when people report to be focused on the task that their randomness generation is better, as compared to the other cognitive states. 

Firstly, I load the libraries and transform the data. 

```{r load libraries and data}
library(tidyverse)
library(plotly)
library(patchwork)
library(ggridges)
read_csv("../../ex3/data/raw_mwtms_data.csv") -> all_mw_data 
source("../../ex3/src/transformation.R") # AE calculation
```

```{r transform data}
all_mw_data |> 
  select(-region.y) |>
  filter(stimulation == "sham") -> mw_data

da_pro(mw_data, nback=25) -> trans_mw
da_pro(all_mw_data, nback=25) -> trans_mw_all
```

Then we can start by visualizing the distribution over the different cognitive states. I will start with a simple point plot

```{r}
trans_mw |>
  ggplot(aes(x=probe1, y=zlogapen))+
  geom_point(alpha = .2, position = position_jitter(.2))
```

Visualizing data in this way makes it hard to understand the distribution within each category. Although we can clearly see that 3 and 4 have more responses than 1 and 2. That is, the difference between the conditions categories are evident, even though it is not entirely clear whether it is normally distributed. 

To investigate this, we can use histogram and colour them according to the categorical response.

```{r}
trans_mw |> 
  ggplot(aes(x=zlogapen, group=probe1, col=probe1,fill=probe1))+
  geom_histogram(alpha=.3)
```

In this plot the bars are stacked on top of each other, which can make it problematic to see whether the data is distributed normally, especially for the lower probe responses (higher stacked bars). To fix this, we can position the bars beside each other. 

```{r}
trans_mw |> 
  ggplot(aes(x=zlogapen, group=probe1, fill=probe1))+
  geom_histogram(alpha=.3, position = position_dodge(), col="black", size=.15
                 ) -> p_hist 
p_hist
```

With this plot, the distribution within each categorical response is more evident, but regardless, still difficult to read. This can be fixed splitting the distribution, which can be done by using facets.

```{r}
p_hist +
  facet_wrap(~probe1)
```

In this graph, the distribution within each response is clearly evident and easy to read. Moreover, it appears as though the distribution within the first categorical response is flat, at least compared to the other distributions. To further investigate this, we can easily change the distribution to a density distribution. A kernel density estimation creates a smooth and continuous representation of the distribution. 

```{r}
trans_mw |> 
  ggplot(aes(x=zlogapen, group=probe1, fill=probe1, col=probe1))+
  geom_density(alpha=.2)
```

As we can see from the plot all of the distributions over each category are surprisingly similar, at least compared to the histogram representation. We can further split the difference between the distributions by using *facets*. 

```{r}
trans_mw |> 
  ggplot(aes(x=zlogapen, group=probe1, fill=probe1))+
  geom_density(alpha=.3)+
  facet_wrap(~probe1)
```

With this plot, we can see more nuances in each distribution. However, they appear to be more similar than dissimilar. 

In a similar way to exercise 3, we can also visualize the distribution using a 2d density visualization. 

```{r 2d density filled w colour}
trans_mw |> 
  mutate(probe1=as.numeric(probe1)) |>
  ggplot(aes(x=probe1, y=zlogapen))+
  geom_density2d_filled()
```

We can clearly see that the fourth response received more responses than the first. However, since the density is spread over plus and minus values, it appears as though responses are spread around the categorical response. It is important to point out that it remains a bit ambiguous how to interpret the distribution. Readers are aided to thing of the distribution as happening in two dimensions, when it only really happens over one dimension. That is to say, the data distribution within one categorical response only happens according to the cluster of data points of AE values - not at the same time a distribution around the probe response. It is suggested that the data distributes around each response (e.g., 2.9 to 3.1), even though they are perfectly symmetrical and one side could safely be removed. With such a choice, it would be more evident that we are talking about only a one dimensional distribution over different categories. One way of achieveing this is to use the *ggridges* library, which makes it easy to visualize data distributions over categories. 

```{r 2d density filled w colour}
library(ggridges)
trans_mw |> 
  ggplot(aes(x=zlogapen, y=probe1, fill=probe1))+
  geom_density_ridges(scale = 1.3, alpha=.3)+
  coord_flip()
```

With this plot, we can more easily understand that we are talking about a distribution over one categorical response. Moreover, it is easier to comprehend the distribution over each categorical response then the (above) 2d distribution. The *ggridges* library is clearly superior in many regards, as it overlays the distributions without disrupting the distribution behind it, but still making comparisons easily. For instance, the first cases used histograms, which makes it hard to compared the distribution, because it uses count summary. While using density made comparison of the distribution easier, it was hard to see the individual distributions when they were overlapped, but difficult to compared when they were split by facets. Thus, *ggridges* makes it a better compromise between these two options, making it easier to both see the individual distribution, but also compare the distribution over each response. 

With this, we can make a simple and clear plot. 

```{r}
trans_mw |> 
  ggplot(aes(x=zlogapen, y=probe1, fill = 0.5 - abs(0.5 - after_stat(ecdf))))+
  geom_density_ridges_gradient(scale = 1.3, calc_ecdf = T)+ 
    # https://wilkelab.org/ggridges/articles/introduction.html
  scale_fill_viridis_c(name = "Tail probability", option = "inferno")+
  theme_minimal()+
  scale_x_continuous(breaks=seq(-8,8,1))+
  labs(y="Mind wandering category", x="Standardized AE score")
```



```{r}
trans_mw |> 
  pivot_longer(c(probe1,block)) |>
  ggplot(aes(x=zlogapen, y=value))+
  geom_density_ridges(scale = 3, alpha=.3)+
  geom_vline(xintercept=0)

```


```{r}
trans_mw_all |>
  ggplot(aes(x=zlogapen, y = probe1))+
  geom_density_ridges()+
  facet_wrap(~stim, nrow=2)
```




This plot clearly visualize the distribution of the data compared to the former once. It is difficult to grasp the distribution of the data when it is split over another variable. Alternatively we could show the density over the different categories. 

The former plots do not visualize the distribution of the data easily. Compared to the former plots, this indicate the distribution of the data for each of the variable. 


 
```{r cumulative evidence}
trans_mw |> # https://stackoverflow.com/a/39432933/21637065
  ggplot(aes(x=apen, col=probe1))+
  stat_ecdf()
```










